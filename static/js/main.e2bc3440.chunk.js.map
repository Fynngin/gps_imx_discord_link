{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","a","imxAddress","link","Link","setup","address","console","log","ImmutableXClient","build","publicApiUrl","client","getAssets","user","collection","assets","setAssets","result","useState","className","onClick","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+rBAiCeA,MA7Bf,WAAe,4CACb,sCAAAC,EAAA,6DACQC,EAAa,6CACbC,EAAO,IAAIC,IAAK,gCAFxB,SAK4BD,EAAKE,MAAM,IALvC,uBAKUC,EALV,EAKUA,QACRC,QAAQC,IAAIF,GANd,SAOuBG,IAAiBC,MAAM,CAAEC,aAAc,mCAP9D,cAOQC,EAPR,iBAQuBA,EAAOC,UAAU,CAC9BC,KAAMR,EACNS,WAAYb,IAVtB,QAQQc,EARR,OAYET,QAAQC,IAAIQ,GACZC,EAAUD,EAAOE,QAbnB,4CADa,wBAiBb,MAA4BC,mBAAS,IAArC,mBAAOH,EAAP,KAAeC,EAAf,KAEA,OACE,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,wBAAQC,QAtBA,WAAD,gCAsBP,kBACA,0CAAaL,EAAOM,OAApB,mBCbOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2bc3440.chunk.js","sourcesContent":["import './App.css';\nimport { Link, ImmutableXClient } from '@imtbl/imx-sdk';\nimport { useState } from 'react';\n\nfunction App() {\n  async function sdkExample() {\n    const imxAddress = '0x4764bc088a27f490353e8cf1558ba02fdc418c65';\n    const link = new Link('https://link.x.immutable.com');\n\n    // Register user, you can persist address to local storage etc.\n    const { address } = await link.setup({});\n    console.log(address);\n    const client = await ImmutableXClient.build({ publicApiUrl: 'https://api.x.immutable.com/v1' });\n    const assets = await client.getAssets({\n            user: address,\n            collection: imxAddress\n    });\n    console.log(assets);\n    setAssets(assets.result);\n  }\n\n  const [assets, setAssets] = useState([] as any);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={sdkExample}>TEST</button>\n        <p>You own: {assets.length} items.</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}