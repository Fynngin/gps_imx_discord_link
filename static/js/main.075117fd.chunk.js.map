{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","discordUser","setDiscordUser","useEffect","fragment","URLSearchParams","window","location","hash","slice","get","accessToken","tokenType","fetch","headers","authorization","then","result","json","response","console","log","catch","error","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAoEeA,MAhEf,WAmBE,MAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAmCA,OAjCAC,qBAAU,WAER,IAAMC,EAAW,IAAIC,gBAAgBC,OAAOC,SAASC,KAAKC,MAAM,IAChE,EAAiC,CAACL,EAASM,IAAI,gBAAiBN,EAASM,IAAI,eAAtEC,EAAP,KAAoBC,EAApB,KAyBID,GAvBAE,MAAM,oCAAqC,CACzCC,QAAS,CACPC,cAAc,GAAD,OAAKH,EAAL,YAAkBD,MAGlCK,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GAWJjB,EAAeiB,GACfC,QAAQC,IAAIpB,MAEbqB,MAAMF,QAAQG,SAMlB,IAGD,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,kBC9CTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.075117fd.chunk.js","sourcesContent":["import './App.css';\nimport { Link, ImmutableXClient } from '@imtbl/imx-sdk';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  // async function sdkExample() {\n  //   const imxAddress = '0x4764bc088a27f490353e8cf1558ba02fdc418c65';\n  //   const link = new Link('https://link.x.immutable.com');\n\n  //   // Register user, you can persist address to local storage etc.\n  //   const { address } = await link.setup({});\n  //   console.log(address);\n  //   const client = await ImmutableXClient.build({ publicApiUrl: 'https://api.x.immutable.com/v1' });\n  //   const assets = await client.getAssets({\n  //           user: address,\n  //           collection: imxAddress\n  //   });\n  //   console.log(assets);\n  //   setAssets(assets.result);\n  // }\n\n  // const [assets, setAssets] = useState([] as any);\n\n  const [discordUser, setDiscordUser] = useState();\n\n  useEffect(() => {\n    // parse access_token and token_type that were inserted by Discord into redirect URL\n    const fragment = new URLSearchParams(window.location.hash.slice(1));\n    const [accessToken, tokenType] = [fragment.get('access_token'), fragment.get('token_type')];\n    const fetchUsers = () => {\n        fetch('https://discord.com/api/users/@me', {\n          headers: {\n            authorization: `${tokenType} ${accessToken}`,\n          },\n        })\n        .then(result => result.json())\n        .then(response => {\n          // response format \n          /*\n          {\n                \"id\": \"<user_id>\",\n                \"username\": \"Poopeye\",\n                \"avatar\": \"3118e64af30fc703b9bf3328d156155c\",\n                ...\n            }\n          */\n          // user as avatar URL: `https://cdn.discordapp.com/avatars/${discordUser.id}/${discordUser.avatar}.png`\n          setDiscordUser(response);\n          console.log(discordUser);\n        })\n        .catch(console.error);\n    };\n\n    if (accessToken) {\n      fetchUsers();\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <button onClick={sdkExample}>TEST</button>\n        <p>You own: {assets.length} items.</p> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}